name: Deploy App to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Create tarball using git archive
        run: |
          git archive --format=tar.gz -o diligent.tar.gz HEAD

      - name: üì§ Copy tarball to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "diligent.tar.gz"
          target: "/home/ubuntu/"

      - name: üöÄ Deploy & Build on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "üì¶ Ensuring Node.js & PM2 are installed..."
            if ! command -v pm2 &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
              sudo npm install -g pm2
            fi

            echo "üìÇ Extracting tarball..."
            mkdir -p /home/ubuntu/diligent
            tar -xzf /home/ubuntu/diligent.tar.gz -C /home/ubuntu/diligent
            rm /home/ubuntu/diligent.tar.gz

            echo "üìÇ Installing dependencies, generating Prisma client & building app..."
            cd /home/ubuntu/diligent
            npm install
            npx prisma generate
            npm run build

            echo "üìÇ Loading environment variables..."
            set -a
            source /home/ubuntu/diligent/.env
            set +a

            # Stop and delete old PM2 process if exists
            pm2 delete diligent_app || true

            # Start/restart Next.js with production variables
            PORT=3000 NODE_ENV=production pm2 start npm --name "diligent_app" -- start

            echo "‚åö Waiting for the service to start..."
            MAX_RETRIES=10
            SLEEP_INTERVAL=3
            SUCCESS=false

            for i in $(seq 1 $MAX_RETRIES); do
              if curl -fs http://localhost:3000/api/health > /dev/null 2>&1; then
                echo "‚úÖ Service is healthy (checked after $((i * SLEEP_INTERVAL))s)"
                SUCCESS=true
                break
              fi
              echo "‚è≥ Attempt $i/$MAX_RETRIES: Service not ready yet..."
              sleep $SLEEP_INTERVAL
            done

            if [ "$SUCCESS" = false ]; then
              echo "‚ùå Health check failed after $((MAX_RETRIES * SLEEP_INTERVAL))s"
              echo "üìä PM2 logs:"
              pm2 logs diligent_app
              exit 1
            fi

            echo "üöÄ Deployment complete!"
